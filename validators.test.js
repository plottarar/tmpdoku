import {
  isGroupValid,
  isRowValid,
  isColValid,
  isBoxValid,
  isSudokuSolved,
} from './validators.js';

test('isGroupValid works', () => {
  expect(isGroupValid([1, 2, 3, 4, 5, 6, 7, 8, 9])).toBe(true);
  expect(isGroupValid([0, 1, 0, 0, 5, 6, 0, 8, 9])).toBe(true);
  expect(isGroupValid([1, 1, 3, 4, 5, 6, 7, 8, 9])).toBe(false);
  expect(isGroupValid([0, 1, 0, 0, 5, 6, 0, 8, 1])).toBe(false);
});

test('isRowValid', () => {
  expect(isRowValid(0, [[1, 2, 3, 4, 5, 6, 7, 8, 9]])).toBe(true);
  expect(isRowValid(0, [[1, 2, 3, 4, 5, 6, 7, 9, 9]])).toBe(false);
  expect(
    isRowValid(1, [[0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 2, 3, 4, 5, 6, 7, 8, 9]])
  ).toBe(true);
});

test('isColValid', () => {
  expect(
    isColValid(0, [
      [1, 0, 0, 0, 0, 0, 0, 0, 0],
      [2, 0, 0, 0, 0, 0, 0, 0, 0],
      [3, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 0, 0, 0, 0, 0, 0, 0, 0],
      [5, 0, 0, 0, 0, 0, 0, 0, 0],
      [6, 0, 0, 0, 0, 0, 0, 0, 0],
      [7, 0, 0, 0, 0, 0, 0, 0, 0],
      [8, 0, 0, 0, 0, 0, 0, 0, 0],
      [9, 0, 0, 0, 0, 0, 0, 0, 0],
    ])
  ).toBe(true);
  expect(
    isColValid(0, [
      [1, 0, 0, 0, 0, 0, 0, 0, 0],
      [1, 0, 0, 0, 0, 0, 0, 0, 0],
      [3, 0, 0, 0, 0, 0, 0, 0, 0],
      [4, 0, 0, 0, 0, 0, 0, 0, 0],
      [5, 0, 0, 0, 0, 0, 0, 0, 0],
      [6, 0, 0, 0, 0, 0, 0, 0, 0],
      [7, 0, 0, 0, 0, 0, 0, 0, 0],
      [8, 0, 0, 0, 0, 0, 0, 0, 0],
      [9, 0, 0, 0, 0, 0, 0, 0, 0],
    ])
  ).toBe(false);
  expect(
    isColValid(3, [
      [0, 0, 0, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 2, 0, 0, 0, 0, 0],
      [0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 4, 0, 0, 0, 0, 0],
      [0, 0, 0, 5, 0, 0, 0, 0, 0],
      [0, 0, 0, 6, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ])
  ).toBe(true);
});

test('isBoxValid', () => {
  expect(
    isBoxValid(
      [0, 0],
      [
        [1, 2, 3, 0, 0, 0, 0, 0, 0],
        [4, 5, 6, 0, 0, 0, 0, 0, 0],
        [7, 8, 9, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 3],
        [0, 0, 0, 0, 0, 0, 4, 5, 6],
        [0, 0, 0, 0, 0, 0, 7, 8, 9],
      ]
    )
  ).toBe(true);
  expect(
    isBoxValid(
      [2, 1],
      [
        [1, 2, 3, 0, 0, 0, 0, 0, 0],
        [4, 5, 6, 0, 0, 0, 0, 0, 0],
        [7, 8, 9, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 3],
        [0, 0, 0, 0, 0, 0, 4, 5, 6],
        [0, 0, 0, 0, 0, 0, 7, 8, 9],
      ]
    )
  ).toBe(true);
  expect(
    isBoxValid(
      [8, 8],
      [
        [1, 2, 3, 0, 0, 0, 0, 0, 0],
        [4, 5, 6, 0, 0, 0, 0, 0, 0],
        [7, 8, 9, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 3],
        [0, 0, 0, 0, 0, 0, 4, 5, 6],
        [0, 0, 0, 0, 0, 0, 7, 8, 9],
      ]
    )
  ).toBe(false);
});
